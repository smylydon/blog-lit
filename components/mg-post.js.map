{"version":3,"file":"mg-post.js","sourceRoot":"","sources":["../src/components/mg-post.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAwB;AACxB,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D;;;GAGG;AAEH,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAAtC;;QAgCE,UAAK,GAAS;YACZ,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,EAAE,EAAE,CAAC;SACE,CAAC;QAGV,aAAQ,GAAG,KAAK,CAAC;IA8BnB,CAAC;IA5CC,IAAI,OAAO,CAAC,IAAY;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAcQ,MAAM;QACb,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,KAAK,GAAG,IAAI,CAAA,aAAa,IAAI,CAAC,WAAW,gBAAgB,CAAC;QAE9D,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,KAAK,GAAG,IAAI,CAAA,aAAa,IAAI,CAAC,YAAY,gBAAgB,CAAC;SAC5D;QACD,OAAO,IAAI,CAAA;YACH,IAAI,CAAC,KAAK;2BACK,IAAI,CAAC,IAAI;;UAE1B,KAAK;gBACC,IAAI,CAAC,IAAI;;gBAET,CAAC;IACf,CAAC;IAEO,YAAY,CAAC,KAAY;QAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC;IAEO,WAAW,CAAC,KAAY;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAClD,CAAC;CACF,CAAA;AAtEiB,aAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;GAuB1B,CAAA;AAGF;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC;qCAG7B;AAGD;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;qCAOnB;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC;wCAChC;AAzCN,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CAuElB;SAvEY,MAAM","sourcesContent":["//import \"./index.scss\";\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\nimport {Post} from './post';\r\n\r\n/**\r\n * A blog element.\r\n *\r\n */\r\n@customElement('mg-post')\r\nexport class MgPost extends LitElement {\r\n  static override styles = css`\r\n    .post-credit {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    a {\r\n      cursor: pointer;\r\n    }\r\n\r\n    .post-credit a,\r\n    .post-credit a:visited {\r\n      margin-right: 0.5rem;\r\n      color: black;\r\n    }\r\n\r\n    .post-credit a:hover,\r\n    .post-credit a:focus {\r\n      color: hsla(0, 0%, 0%, 0.75);\r\n    }\r\n\r\n    .excerpt {\r\n      font-style: italic;\r\n    }\r\n  `;\r\n\r\n  @property({attribute: 'post'})\r\n  set setPost(post: string) {\r\n    this.model = JSON.parse(post);\r\n  }\r\n\r\n  @property({attribute: false})\r\n  model: Post = {\r\n    title: '',\r\n    userId: 0,\r\n    body: '',\r\n    name: '',\r\n    id: 0,\r\n  } as Post;\r\n\r\n  @property({type: Object, attribute: 'is-single'})\r\n  isSingle = false;\r\n\r\n  override render() {\r\n    const post = this.model;\r\n    let value = html`<a @click=${this._onClickNew}>View Post</a>`;\r\n\r\n    if (this.isSingle) {\r\n      value = html`<a @click=${this._onClickEdit}>Edit Post</a>`;\r\n    }\r\n    return html`<article>\r\n      <h2>${post.title}</h2>\r\n      <p class=\"excerpt\">${post.body}...</p>\r\n      <p class=\"post-credit\">\r\n        ${value}\r\n        <span>${post.name}</span>\r\n      </p>\r\n    </article> `;\r\n  }\r\n\r\n  private _onClickEdit(event: Event) {\r\n    event.preventDefault();\r\n    console.log('edit-post');\r\n    this.dispatchEvent(new CustomEvent('edit-post'));\r\n  }\r\n\r\n  private _onClickNew(event: Event) {\r\n    event.preventDefault();\r\n    console.log('new-post');\r\n    this.dispatchEvent(new CustomEvent('new-post'));\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'mg-post': MgPost;\r\n  }\r\n}\r\n"]}